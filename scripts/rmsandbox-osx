#!/bin/bash
#
# Unmount a shadowed sandbox
#

if [ $# -eq 1 ]; then
	chrootdir="${1%%/}"; shift
        chrootname=$(basename ${chrootdir})
else
	echo "usage: $0 <chrootdir>" >&2
	exit 2
fi

if [ ! -d ${chrootdir} ]; then
	echo "ERROR: ${chrootdir} does not exist." >&2
	exit 1
fi

# Calculate pkgbuild based on chroot name.
pkgbuild=${chrootname}
pkgbuild=${pkgbuild#bootstrap-pbulk-}
pkgbuild=${pkgbuild#bootstrap-}
pkgbuild=${pkgbuild#dev-}
pkgbuild=${pkgbuild#pkgsrc-}
pkgbuild=${pkgbuild%%-build}
pkgbuild=${pkgbuild%%-scan}
pkgbuild=${pkgbuild%%-build-*}
pkgbuild=${pkgbuild%%-scan-*}

# Load per-pkgbuild configuration.
if [ ! -f $(dirname $0)/../conf/${pkgbuild}/pkgbuild.conf ]; then
	echo "Couldn't determine pkgbuild from ${chrootdir}" >&2
	exit 1
fi
. $(dirname $0)/../conf/${pkgbuild}/pkgbuild.conf

i=1
while true; do
	pids=
	for pid in $(fuser ${chrootdir} 2>/dev/null)
	do
		# Skip mount processes
		ps -p ${pid} | egrep '(kextd|mds|mds_stores|notifyd)$' >/dev/null
		if [ $? -eq 0 ]; then
			continue
		fi
		if [ -n "${pids}" ]; then
			pids="${pids} ${pid}"
		else
			pids="${pid}"
		fi
	done
	if [ -n "${pids}" ]; then
		echo "WARNING: $(uname -n) ${chrootdir} still in use (pids=${pids}, retry=$i)..."
		i=$((i + 1))
		sleep 5
	else
		break
	fi
done

for mount in ${NFS_MOUNTS}; do
	dst=${mount#*=}
	umount -f ${chrootdir}${dst} 2>/dev/null
	rmdir ${chrootdir}${dst} 2>/dev/null
done

for mount in ${TMPFS_MOUNTS}; do
	mnt=${mount%=*}
	umount -f ${chrootdir}${mnt} 2>/dev/null
	rmdir ${chrootdir}${mnt} 2>/dev/null
done

if [ -s ${SHADOW_BASEDIR}/${chrootname}.ramfs ]; then
	while read disk; do
		hdiutil eject ${disk} >/dev/null
	done < ${SHADOW_BASEDIR}/${chrootname}.ramfs
fi

umount -f ${chrootdir}/dev 2>/dev/null

read chrootdev <${SHADOW_BASEDIR}/${chrootname}.dev
diskutil unmountDisk force ${chrootdev} >/dev/null
hdiutil eject ${chrootdev} >/dev/null

rm -f ${SHADOW_BASEDIR}/${chrootname}.dev
rm -f ${SHADOW_BASEDIR}/${chrootname}.ramfs
rm -f ${SHADOW_BASEDIR}/${chrootname}.shadow
rm -rf ${chrootdir}
