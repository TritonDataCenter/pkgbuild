#!/bin/bash
#
# Create an initial pbulk bootstrap.
#
# usage: mk-pbulk-bootstrap <pkgbuild>
#

if [ $# -ne 1 ]; then
	echo "usage: $0 <pkgbuild>" 1>&2
	exit 2
else
	pkgbuild=$1; shift
fi

# Load per-pkgbuild config
. $(dirname $0)/../conf/${pkgbuild}/pkgbuild.conf

${CHROOT_CREATE} ${CHROOT_BASEDIR}/bootstrap-pbulk-${pkgbuild}
env -i ${CMD_CHROOT} ${CHROOT_BASEDIR}/bootstrap-pbulk-${pkgbuild} ${CMD_SHELL} -c "
	set -ex
	export HOME=${ROOT_HOMEDIR}
	export PATH=${PBULK_PATH}
	cd ${PKGSRC_BASEDIR}/${PKGSRC_DIR}/bootstrap
	env ${BOOTSTRAP_ENV} CFLAGS='${BOOTSTRAP_CFLAGS}' PKGSRC_KEEP_BIN_PKGS=no \
	  ./bootstrap \
	    --abi=${PKGBUILD_ABI} \
	    ${BOOTSTRAP_ARG_COMPILER} \
	    ${BOOTSTRAP_ARG_JOBS} \
	    ${BOOTSTRAP_ARG_MULTIARCH} \
	    ${BOOTSTRAP_ARG_PREFER} \
	    --prefix=${PKGBUILD_LOCALBASE} \
	    --sysconfdir=${PKGBUILD_SYSCONFDIR} \
	    --pkgdbdir=${PKGBUILD_PKGDBDIR} \
	    --pkgmandir=${PKGBUILD_PKGMANDIR} \
	    --varbase=${PKGBUILD_VARBASE} \
	    --mk-fragment=${PKGBUILD_BASEDIR}/conf/${pkgbuild}/mk-fragment.conf \
	    --workdir=/tmp/pkgsrc-${pkgbuild}
	rm -rf /tmp/pkgsrc-${pkgbuild}
	tardirs='.${PKGBUILD_LOCALBASE}'
	addetc=false
	if [ '${PKGBUILD_PKGDBDIR#${PKGBUILD_LOCALBASE}}' = '${PKGBUILD_PKGDBDIR}' ]; then
		tardirs=\"\${tardirs} ${PKGBUILD_PKGDBDIR}\"
	fi
	if [ '${PKGBUILD_SYSCONFDIR#${PKGBUILD_LOCALBASE}}' = '${PKGBUILD_SYSCONFDIR}' ]; then
		addetc=true
		tardirs=\"\${tardirs} .${PKGBUILD_SYSCONFDIR}/mk.conf\"
	fi
	cd /
	touch ${PKGBUILD_LOCALBASE}/.dlj_license_accepted
	#
	# Remove flags added by bootstrap that we don't want.
	#
	ed ${PKGBUILD_SYSCONFDIR}/mk.conf >/dev/null 2>&1 <<-EOF
		g/^CFLAGS/d
		g/^DBG/d
		g/^CPPFLAGS/d
		g/^LDFLAGS/d
		g/^LIBS/d
		w
		q
	EOF
	if [ -n '${PKGBUILD_GPG_SIGN_AS}' ]; then
		mkdir -p ${PKGBUILD_SYSCONFDIR}/gnupg
		${CMD_GPG} --export ${PKGBUILD_GPG_SIGN_AS} \
		    >${PKGBUILD_SYSCONFDIR}/gnupg/pkgsrc.gpg
		cat >${PKGBUILD_SYSCONFDIR}/pkg_install.conf <<-EOF
			GPG=${CMD_GPG}
			GPG_SIGN_AS=${PKGBUILD_GPG_SIGN_AS}
			GPG_KEYRING_VERIFY=${PKGBUILD_SYSCONFDIR}/gnupg/pkgsrc.gpg
		EOF
		if [ -n '${VERIFIED_INSTALLATION_PBULK}' ]; then
			cat >>${PKGBUILD_SYSCONFDIR}/pkg_install.conf <<-EOF
				VERIFIED_INSTALLATION=${VERIFIED_INSTALLATION_PBULK}
			EOF
		fi
		if \${addetc}; then
			tardirs=\"\${tardirs} .${PKGBUILD_SYSCONFDIR}/gnupg\"
			tardirs=\"\${tardirs} .${PKGBUILD_SYSCONFDIR}/pkg_install.conf\"
		fi
	fi
	mkdir -p ${LOCAL_PACKAGE_BASEDIR}/${BOOTSTRAP_PBULK_DIR}
	${CMD_TAR} zcf ${LOCAL_PACKAGE_BASEDIR}/${BOOTSTRAP_PBULK_DIR}/${BOOTSTRAP_KIT}.tar.gz \${tardirs}
"
ret=$?
if [ $ret -ne 0 -a -d ${CHROOT_BASEDIR}/bootstrap-pbulk-${pkgbuild}/tmp/pkgsrc-${pkgbuild} ]; then
	echo "Saving failed bootstrap directory to /var/tmp/pkgsrc-${pkgbuild}-$$"
	mv ${CHROOT_BASEDIR}/bootstrap-pbulk-${pkgbuild}/tmp/pkgsrc-${pkgbuild} \
	    /var/tmp/pkgsrc-${pkgbuild}-$$
fi
${CHROOT_DELETE} ${CHROOT_BASEDIR}/bootstrap-pbulk-${pkgbuild}
exit ${ret}
