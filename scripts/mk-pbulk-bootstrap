#!/bin/bash
#
# Create an initial pbulk bootstrap.
#
# usage: mk-pbulk-bootstrap <pkgbuild>
#

if [ $# -ne 1 ]; then
	echo "usage: $0 <pkgbuild>" 1>&2
	exit 2
else
	pkgbuild=$1; shift
fi

# Load per-pkgbuild config
. $(dirname $0)/../conf/${pkgbuild}/pkgbuild.conf

${CHROOT_CREATE} ${CHROOT_BASEDIR}/bootstrap-pbulk-${pkgbuild}
env -i /usr/sbin/chroot ${CHROOT_BASEDIR}/bootstrap-pbulk-${pkgbuild} ${SU} - root -c "
	set -ex
	PATH=${PBULK_PATH}
	cd ${PKGSRC_BASEDIR}/${PKGSRC_DIR}/bootstrap
	env ${BOOTSTRAP_ENV} CFLAGS='${BOOTSTRAP_CFLAGS}' \
	  ./bootstrap \
	    --abi=${ABI} \
	    ${BOOTSTRAP_ARG_COMPILER} \
	    ${BOOTSTRAP_ARG_JOBS} \
	    ${BOOTSTRAP_ARG_MULTIARCH} \
	    ${BOOTSTRAP_ARG_PREFER} \
	    --prefix=${PREFIX} \
	    --sysconfdir=${SYSCONFDIR} \
	    --pkgdbdir=${PKGDBDIR} \
	    --pkgmandir=${PKGMANDIR} \
	    --varbase=${VARBASE} \
	    --mk-fragment=${PKGBUILD_BASEDIR}/conf/${pkgbuild}/mk-fragment.conf \
	    --workdir=/tmp/pkgsrc-${pkgbuild}
	rm -rf /tmp/pkgsrc-${pkgbuild}
	cd /
	touch ${PREFIX}/.dlj_license_accepted
	if [ -n '${GPG_SIGN_AS}' ]; then
		mkdir -p ${SYSCONFDIR}/gnupg
		${GPG} --export ${GPG_SIGN_AS} \
		    >${SYSCONFDIR}/gnupg/pkgsrc.gpg
		cat >${SYSCONFDIR}/pkg_install.conf <<-EOF
			GPG=${GPG}
			GPG_SIGN_AS=${GPG_SIGN_AS}
			GPG_KEYRING_VERIFY=${SYSCONFDIR}/gnupg/pkgsrc.gpg
		EOF
		if [ -n '${VERIFIED_INSTALLATION_PBULK}' ]; then
			cat >>${SYSCONFDIR}/pkg_install.conf <<-EOF
				VERIFIED_INSTALLATION=${VERIFIED_INSTALLATION_PBULK}
			EOF
		fi
	fi
	mkdir -p ${LOCAL_PACKAGE_BASEDIR}/${BOOTSTRAP_PBULK_DIR}
	${TAR} zcf ${LOCAL_PACKAGE_BASEDIR}/${BOOTSTRAP_PBULK_DIR}/${BOOTSTRAP_KIT}.tar.gz .${PREFIX}
	# Create pkgbuild bootstraps with signing bits removed
	ed ${SYSCONFDIR}/pkg_install.conf >/dev/null 2>&1 <<-EOF
		g/^GPG=/d
		g/^GPG_SIGN_AS=/d
		g/^VERIFIED_INSTALLATION=/d
		w
		q
	EOF
	if [ '${PKGBUILD_BASEDIR}' = '/shared/pbulk' ]; then
		ed ${SYSCONFDIR}/mk.conf >/dev/null 2>&1 <<-EOF
			g,/shared/pbulk,s,/shared/pbulk,/data/pkgbuild,
			w
			q
		EOF
	fi
	mkdir -p ${LOCAL_PACKAGE_BASEDIR}/${BOOTSTRAP_PKGBUILD_DIR}
	${TAR} zcf ${LOCAL_PACKAGE_BASEDIR}/${BOOTSTRAP_PKGBUILD_DIR}/${BOOTSTRAP_KIT}.tar.gz .${PREFIX}
"
ret=$?
if [ $ret -ne 0 -a -d ${CHROOT_BASEDIR}/bootstrap-pbulk-${pkgbuild}/tmp/pkgsrc-${pkgbuild} ]; then
	echo "Saving failed bootstrap directory to /var/tmp/pkgsrc-${pkgbuild}-$$"
	mv ${CHROOT_BASEDIR}/bootstrap-pbulk-${pkgbuild}/tmp/pkgsrc-${pkgbuild} \
	    /var/tmp/pkgsrc-${pkgbuild}-$$
fi
${CHROOT_DELETE} ${CHROOT_BASEDIR}/bootstrap-pbulk-${pkgbuild}
exit ${ret}
