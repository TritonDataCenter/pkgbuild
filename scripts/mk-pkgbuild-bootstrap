#!/bin/bash
#
# Create the final pkgbuild kit for sandbox builds.
#

usage()
{
	echo "usage: $0 [-h] <pkgbuild>" >&2
}

while getopts ":h" opt; do
	case "${opt}" in
	h)
		usage
		exit
		;;
	*)
		usage
		exit 2
		;;
	esac
done
shift $((OPTIND - 1))

if [ $# -eq 1 ]; then
	pkgbuild=$1; shift
else
	usage
	exit 2
fi

# Load per-pkgbuild config
. $(dirname $0)/../conf/${pkgbuild}/pkgbuild.conf

${CHROOT_CREATE} ${CHROOT_BASEDIR}/bootstrap-${pkgbuild}
env -i ${CMD_CHROOT} ${CHROOT_BASEDIR}/bootstrap-${pkgbuild} ${CMD_SHELL} -c "
	set -e
	export HOME=${ROOT_HOMEDIR}
	export PATH=${PBULK_PATH}
	${CMD_TAR} -zxf ${LOCAL_PACKAGE_BASEDIR}/${BOOTSTRAP_PBULK_DIR}/${BOOTSTRAP_KIT}.tar.gz -C /
	PATH=${PKGBUILD_LOCALBASE}/sbin:${PKGBUILD_LOCALBASE}/bin:${PBULK_PATH}

	#
	# Ensure bootstrap packages are upgraded as well as any extras required
	# for pkgbuild sandboxes.  This ensures they support SSL, etc.
	#
	PKG_PATH=${LOCAL_PACKAGE_BASEDIR}/${LOCAL_PACKAGE_DIR}/${binpkgpath}/All \
	    ${PKGBUILD_LOCALBASE}/sbin/pkg_add -U ${BOOTSTRAP_PACKAGES_PKGBUILD}

	#
	# Configure mozilla-rootcerts.  Avoid 'install' as it fails if
	# /etc/ssl/certs exists.
	#
	if [ -x ${PKGBUILD_LOCALBASE}/sbin/mozilla-rootcerts ]; then
		(
		cd ${PKGBUILD_SYSCONFDIR}/openssl/certs
		${PKGBUILD_LOCALBASE}/sbin/mozilla-rootcerts extract >/dev/null
		${PKGBUILD_LOCALBASE}/sbin/mozilla-rootcerts rehash >/dev/null
		)
	fi

	#
	# Remove signing bits
	#
	if [ -f ${PKGBUILD_SYSCONFDIR}/pkg_install.conf ]; then
		ed ${PKGBUILD_SYSCONFDIR}/pkg_install.conf >/dev/null 2>&1 <<-EOF
			g/^GPG=/d
			g/^GPG_SIGN_AS=/d
			g/^VERIFIED_INSTALLATION=/d
			w
			q
		EOF
	fi

	#
	# Update pkgbuild paths to match documented.
	#
	if [ '${PKGBUILD_OPSYS}' = 'Darwin' ]; then
		if [ '${PKGBUILD_BASEDIR}' != '/Volumes/data/pkgbuild' ]; then
			ed ${PKGBUILD_SYSCONFDIR}/mk.conf >/dev/null 2>&1 <<-EOF
				g,${PKGBUILD_BASEDIR},s,${PKGBUILD_BASEDIR},/Volumes/data/pkgbuild,
				w
				q
			EOF
		fi
	else
		if [ '${PKGBUILD_BASEDIR}' != '/data/pkgbuild' ]; then
			ed ${PKGBUILD_SYSCONFDIR}/mk.conf >/dev/null 2>&1 <<-EOF
				g,${PKGBUILD_BASEDIR},s,${PKGBUILD_BASEDIR},/data/pkgbuild,
				w
				q
			EOF
		fi
	fi

	mkdir -p ${LOCAL_PACKAGE_BASEDIR}/${BOOTSTRAP_PKGBUILD_DIR}
	${CMD_TAR} zcf ${LOCAL_PACKAGE_BASEDIR}/${BOOTSTRAP_PKGBUILD_DIR}/${BOOTSTRAP_KIT}.tar.gz .${PKGBUILD_LOCALBASE}
"
bsret=$?
${CHROOT_DELETE} ${CHROOT_BASEDIR}/bootstrap-${pkgbuild}
chret=$?
if [ ${bsret} -eq 0 ]; then
	echo "Created ${LOCAL_PACKAGE_BASEDIR}/${BOOTSTRAP_PKGBUILD_DIR}/${BOOTSTRAP_KIT}.tar.gz"
else
	echo "Bootstrap creation failed."
fi
exit $((${bsret} + ${chret}))
