<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<service_bundle type='manifest' name='runit'>
  <service name='pkgsrc/@SMF_NAME@' type='service' version='1'>
    <create_default_instance enabled='false' />
    <single_instance />
    <dependency name='network' grouping='require_all' restart_on='none' type='service'>
      <service_fmri value='svc:/milestone/network:default' />
    </dependency>
    <dependency name='filesystem-local' grouping='require_all' restart_on='none' type='service'>
      <service_fmri value='svc:/system/filesystem/local:default' />
    </dependency>
    <method_context>
      <method_environment>
        <envvar name="PATH" value="@PREFIX@/bin:@PREFIX@/sbin:/usr/xpg4/bin:/usr/bin:/usr/sbin" />
      </method_environment>
    </method_context>
    <exec_method type='method' name='start' exec='@PREFIX@/sbin/runsvdir -P @PREFIX@/etc/service' timeout_seconds='60'>
      <method_context>
        <method_credential user='root' group='root' />
      </method_context>
    </exec_method>
    <exec_method type='method' name='stop' exec=':kill' timeout_seconds='60'>
      <method_context>
        <method_credential user='root' group='root' />
      </method_context>
    </exec_method>
    <property_group name='startd' type='framework'>
      <!-- use 'wait' instead of 'contract' to avoid daemonization this will 
           act almost like /etc/inittab, which is what we want -->
      <propval name='duration' type='astring' value='child' />
      <!-- sub-process core dumps shouldn't restart session -->
      <propval name='ignore_error' type='astring' value='core,signal' />
    </property_group>
    <stability value='Evolving' />
  </service>
</service_bundle>
