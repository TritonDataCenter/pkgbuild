# $NetBSD$

case ${STAGE} in
POST-INSTALL)
	if ! svcprop -q riak-epmd; then
	    cat >/tmp/.riak-epmd.xml <<EOF
<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<service_bundle type="manifest" name="epmd">
  <service name="pkgsrc/riak-epmd" type="service" version="1">
    <create_default_instance enabled="false" />
    <single_instance />
    <dependency name="network" grouping="require_all" restart_on="error" type="service">
      <service_fmri value="svc:/milestone/network:default" />
    </dependency>
    <dependency name="filesystem" grouping="require_all" restart_on="error" type="service">
      <service_fmri value="svc:/system/filesystem/local" />
    </dependency>
    <method_context>
      <method_credential user="riak" group="riak" />
    </method_context>
    <exec_method type="method" name="start" exec="@PREFIX@/riak/erts-@ERTS_VERSION@/bin/epmd -daemon" timeout_seconds="60" />
    <exec_method type="method" name="stop" exec=":kill" timeout_seconds="60" />
    <property_group name="startd" type="framework">
      <propval name="duration" type="astring" value="contract" />
      <propval name="ignore_error" type="astring" value="core,signal" />
    </property_group>
    <property_group name="application" type="application"></property_group>
    <stability value="Evolving" />
    <template>
      <common_name>
        <loctext xml:lang="C">Erlang Port Mapper Daemon</loctext>
      </common_name>
    </template>
  </service>
</service_bundle>
EOF
	  svccfg import /tmp/.riak-epmd.xml
	  rm -f /tmp/.riak-epmd.xml
	fi
;;
esac
