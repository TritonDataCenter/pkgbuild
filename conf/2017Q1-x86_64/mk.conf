#
# Additional settings for the '2017Q1-x86_64' bulk build.
#

BRANCH=			2017Q1
PKGBUILD?=		2017Q1-x86_64
PKGBUILD_BASEDIR?=	/data/pkgbuild
TOOLS_BASEDIR?=		/opt/tools

#
# ============================================================================
# Default options which are shared across all builds, including upstream and
# non-Joyent packages.  This section should not contain anything which might
# hide issues we would want to fix upstream.
# ============================================================================
#
DISTDIR=		/data/distfiles
PACKAGES=		/data/packages/SmartOS/2017Q1/x86_64
WRKOBJDIR=		/home/pbulk/build
#
.if !make(distinfo) && !make(mdi) && !make(makedistinfo)
FAILOVER_FETCH=		yes
.endif

#
# General pkgsrc variables mostly set on a per-pkgbuild basis.
#
ALLOW_VULNERABLE_PACKAGES=	yes
CFLAGS=				-pipe -O2
FETCH_USING=			curl
INSTALL_UNSTRIPPED=		yes
MANZ=				yes
NO_PKGTOOLS_REQD_CHECK=		yes
PBULK_CACHE_DIRECTORY=		/var/tmp
PKGGNUDIR=
PKGINSTALL_IGNORE_UIDGID=	yes
PKGSRC_KEEP_BIN_PKGS=		no
PKGSRC_RUN_TEST=		no
PKGSRC_USE_SSP=			strong
PKG_DEVELOPER=			yes
PKG_REGISTER_SHELLS=		yes
SHCOMMENT=			:
SKIP_LICENSE_CHECK=		yes
USE_CWRAPPERS=			yes

#
# Enable additional PKG_DEVELOPER checks.  CHECK_WRKREF_EXTRA_DIRS is only
# activated if CHECK_WRKREF contains "extra".
#
CHECK_SHLIBS_BLACKLIST=		^/usr/sfw
CHECK_SHLIBS_BLACKLIST+=	^/(lib|usr/lib)(/(32|64|amd64))?/lib(curses|termcap|xml2|z).so
CHECK_SHLIBS_BLACKLIST+=	^/usr/lib(/(32|64|amd64))?(gcc_s|stdc..).so
CHECK_WRKREF=			tools home
CHECK_WRKREF_EXTRA_DIRS=	/opt/tools

#
# List of per-PKGPATH MAKE_JOBS definitions.  These are the packages that
# benefit most from having a larger -jN than the default as they are heavily
# depended upon, or are long builds near the end of the run.
#
PKG_MAKE_JOBS.archivers/xz=			2
PKG_MAKE_JOBS.audio/arts=			2
PKG_MAKE_JOBS.audio/pulseaudio=			2
PKG_MAKE_JOBS.cad/ghdl=				2
PKG_MAKE_JOBS.chat/psi=				2
PKG_MAKE_JOBS.converters/libiconv=		2
PKG_MAKE_JOBS.databases/mongodb=		2
PKG_MAKE_JOBS.databases/mysql-workbench=	2
PKG_MAKE_JOBS.databases/pgadmin3=		2
PKG_MAKE_JOBS.devel/boost-libs=			2
PKG_MAKE_JOBS.devel/cmake=			2
PKG_MAKE_JOBS.devel/gettext-lib=		2
PKG_MAKE_JOBS.devel/gettext-tools=		2
PKG_MAKE_JOBS.devel/gmp=			2
PKG_MAKE_JOBS.devel/gtexinfo=			2
PKG_MAKE_JOBS.devel/kdevelop4=			2
PKG_MAKE_JOBS.devel/kdevplatform=		2
PKG_MAKE_JOBS.devel/pango=			2
PKG_MAKE_JOBS.devel/qtscriptgenerator=		2
PKG_MAKE_JOBS.editors/emacs24=			2
PKG_MAKE_JOBS.editors/lyx=			2
PKG_MAKE_JOBS.finance/kmymoney2=		2
PKG_MAKE_JOBS.games/libkdegames=		2
PKG_MAKE_JOBS.games/libkmahjongg=		2
PKG_MAKE_JOBS.graphics/MesaLib=			2
PKG_MAKE_JOBS.graphics/cairo=			2
PKG_MAKE_JOBS.graphics/cairo-gobject=		2
PKG_MAKE_JOBS.graphics/glu=			2
PKG_MAKE_JOBS.joyent/rust=			2
PKG_MAKE_JOBS.joyent/rust111=			2
PKG_MAKE_JOBS.joyent/rust114=			2
PKG_MAKE_JOBS.joyent/rust18=			2
PKG_MAKE_JOBS.lang/clang=			2
PKG_MAKE_JOBS.lang/gawk=			2
PKG_MAKE_JOBS.lang/gcc47=			2
PKG_MAKE_JOBS.lang/gcc48=			2
PKG_MAKE_JOBS.lang/gcc49=			2
PKG_MAKE_JOBS.lang/gcc5=			2
PKG_MAKE_JOBS.lang/gcc6=			2
PKG_MAKE_JOBS.lang/gcc7=			2
PKG_MAKE_JOBS.lang/libLLVM=			2
PKG_MAKE_JOBS.lang/llvm=			2
PKG_MAKE_JOBS.lang/mercury=			2
PKG_MAKE_JOBS.lang/openjdk7=			2
PKG_MAKE_JOBS.lang/perl5=			2
PKG_MAKE_JOBS.lang/rust=			2
PKG_MAKE_JOBS.math/mpfr=			2
PKG_MAKE_JOBS.math/octave=			2
PKG_MAKE_JOBS.misc/kdeaddons3=			2
PKG_MAKE_JOBS.misc/kdepim3=			2
PKG_MAKE_JOBS.misc/kdepimlibs4=			2
PKG_MAKE_JOBS.misc/libkdeedu=			2
PKG_MAKE_JOBS.misc/marble=			2
PKG_MAKE_JOBS.pkgtools/cwrappers=		2
PKG_MAKE_JOBS.security/fwbuilder=		2
PKG_MAKE_JOBS.security/libgcrypt=		2
PKG_MAKE_JOBS.security/libgpg-error=		2
PKG_MAKE_JOBS.security/qca2=			2
PKG_MAKE_JOBS.sysutils/baloo=			2
PKG_MAKE_JOBS.sysutils/libbaloo4=		2
PKG_MAKE_JOBS.sysutils/strigi=			2
PKG_MAKE_JOBS.textproc/libxslt=			2
PKG_MAKE_JOBS.www/shibboleth-sp=		2
PKG_MAKE_JOBS.www/webkit-gtk=			2
PKG_MAKE_JOBS.www/webkit1-gtk=			2
PKG_MAKE_JOBS.www/webkit1-gtk3=			2
PKG_MAKE_JOBS.www/webkit24-gtk=			2
PKG_MAKE_JOBS.www/webkit24-gtk3=		2
PKG_MAKE_JOBS.x11/gtk2=				2
PKG_MAKE_JOBS.x11/gtk3=				2
PKG_MAKE_JOBS.x11/kde-baseapps4=		2
PKG_MAKE_JOBS.x11/kde-runtime4=			2
PKG_MAKE_JOBS.x11/kde-workspace4=		2
PKG_MAKE_JOBS.x11/kdebase3=			2
PKG_MAKE_JOBS.x11/kdelibs3=			2
PKG_MAKE_JOBS.x11/kdelibs4=			2
PKG_MAKE_JOBS.x11/libX11=			2
PKG_MAKE_JOBS.x11/libXext=			2
PKG_MAKE_JOBS.x11/libXxf86vm=			2
PKG_MAKE_JOBS.x11/libkactivities4=		2
PKG_MAKE_JOBS.x11/libxcb=			2
PKG_MAKE_JOBS.x11/py-kde4=			2
PKG_MAKE_JOBS.x11/qt3-libs=			2
PKG_MAKE_JOBS.x11/qt3-tools=			2
PKG_MAKE_JOBS.x11/qt4-libs=			2
PKG_MAKE_JOBS.x11/qt4-tools=			2
PKG_MAKE_JOBS.x11/qt5-qtbase=			2
PKG_MAKE_JOBS.x11/qt5-qtdeclarative=		2
PKG_MAKE_JOBS.x11/wxGTK28=			2

#
# Use a PKGPATH-based definition or the default
#
MAKE_JOBS_DEFAULT=	1
MAKE_JOBS=		${PKG_MAKE_JOBS.${PKGPATH}:U${MAKE_JOBS_DEFAULT}}

#
# SmartOS GCC settings.  Skip for Linux/OSX builds.
#
.if empty(PKGBUILD:Mlinux-*) && empty(PKGBUILD:Mel[67]-*) && empty(PKGBUILD:Mosx-*)
#
# Whether to depend upon the GCC runtime from the current build.  Generally
# this should be set when binaries are distributed, otherwise they will depend
# upon the GCC runtime from the tools.
#
USE_PKGSRC_GCC_RUNTIME=	yes
#
# If enabled GCC will enable --with-local-prefix=${LOCALBASE}, otherwise it
# will use the default of GCC_PREFIX.  This is required to be disabled for
# the "tools" build so that bad includes don't leak into a non-tools build.
#
USE_GCC_LOCALBASE_PREFIX=	yes
#
# Try to avoid requiring clang for GNUstep
#
.  if !empty(PKGBUILD:Mupstream-*)
PKG_OPTIONS.gnustep+=	fragile
.  endif
#
# Use in-tree GCC except on older branches and upstream builds.  Upstream
# builds cannot use in-tree yet as there's no way to build binutils using
# an external libtool without patches at this time.
#
.  if empty(PKGBUILD:Mupstream*)
#
# Use external GCC for GCC itself and its dependencies, otherwise we run into
# circular dependencies.
#
.    if !empty(PKGPATH:Mdevel/binutils) \
     || !empty(PKGPATH:Mdevel/gmake) \
     || !empty(PKGPATH:Mdevel/nbpatch) \
     || !empty(PKGPATH:Mlang/gcc2) \
     || !empty(PKGPATH:Mlang/gcc3*) \
     || !empty(PKGPATH:Mlang/gcc??) \
     || !empty(PKGPATH:Mmisc/root) \
     || !empty(PKGPATH:Mpkgtools/abiexec) \
     || !empty(PKGPATH:Mpkgtools/cwrappers) \
     || !empty(PKGPATH:Mpkgtools/digest) \
     || !empty(PKGPATH:Mpkgtools/isaexec) \
     || !empty(PKGPATH:Mpkgtools/pkg_install-info) \
     || !empty(PKGPATH:Msysutils/checkperms)
GCCBASE=		/opt/tools/gcc49
.    else
GCC_REQD=		4.9
USE_PKGSRC_GCC=		yes
.    endif
.  endif
.endif # !Linux && !OSX

#
# ============================================================================
# Any additional per-config custom configuration.
# ============================================================================
#
.include "${PKGBUILD_BASEDIR}/include/additionalpkgs.mk"
.include "${PKGBUILD_BASEDIR}/include/exttools.mk"
.include "${PKGBUILD_BASEDIR}/include/gcc-libs.mk"
.include "${PKGBUILD_BASEDIR}/include/hacks.mk"
.include "${PKGBUILD_BASEDIR}/include/libumem.mk"
.include "${PKGBUILD_BASEDIR}/include/meta-files.mk"
.include "${PKGBUILD_BASEDIR}/include/pkgfail.mk"
.include "${PKGBUILD_BASEDIR}/include/pkgoptions.mk"
.include "${PKGBUILD_BASEDIR}/include/project.mk"
.include "${PKGBUILD_BASEDIR}/include/smf.mk"
.include "${PKGBUILD_BASEDIR}/include/users.mk"

#
# Optional user overrides
#
.sinclude "${PKGBUILD_BASEDIR}/conf/${PKGBUILD}/mk.conf.local"
