#
# Per-pkgbuild configuration.
#
export ABI=${ABI:-64}
export BOOTSTRAP_ARG_COMPILER=${BOOTSTRAP_ARG_COMPILER:-}
export BOOTSTRAP_ARG_JOBS=${BOOTSTRAP_ARG_JOBS:---make-jobs=8}
export BOOTSTRAP_ARG_MULTIARCH=${BOOTSTRAP_ARG_MULTIARCH:-}
export BOOTSTRAP_ARG_PREFER=${BOOTSTRAP_ARG_PREFER:-}
export BOOTSTRAP_ENV=${BOOTSTRAP_ENV:-SH=/bin/bash}
export BOOTSTRAP_KIT=${BOOTSTRAP_KIT:-bootstrap-trunk-pbulk64}
export BOOTSTRAP_PBULK_DIR=${BOOTSTRAP_PBULK_DIR:-Linux/bootstrap-pbulk}
export BOOTSTRAP_RELEASE_DIR=${BOOTSTRAP_RELEASE_DIR:-Linux/bootstrap}
export BULKLOG_BASEDIR=${BULKLOG_BASEDIR:-/data/bulklog}
export BULKLOG_DIR=${BULKLOG_DIR:-Linux/trunk/pbulk64}
export CHROOT_BASEDIR=${CHROOT_BASEDIR:-/data/chroot}
export CHROOT_CREATE=${CHROOT_CREATE:-/data/pkgbuild/scripts/mksandbox-linux}
export CHROOT_DELETE=${CHROOT_DELETE:-/data/pkgbuild/scripts/rmsandbox-linux}
export FAILURE_RECIPIENTS=${FAILURE_RECIPIENTS:-pkgsrc@example.com}
export GCC_REQD=${GCC_REQD:-}
export GPG=${GPG:-/usr/bin/gpg}
export GPG_SIGN_AS=${GPG_SIGN_AS:-}
export HOSTS_REQUIRED=${HOSTS_REQUIRED:-}
export JENKINS_POST_BUILD=${JENKINS_POST_BUILD:-}
export JENKINS_PRE_BUILD=${JENKINS_PRE_BUILD:-/data/pkgbuild/scripts/run-bootstrap}
export LOCAL_PACKAGE_BASEDIR=${LOCAL_PACKAGE_BASEDIR:-/data/packages}
export LOCAL_PACKAGE_DIR=${LOCAL_PACKAGE_DIR:-Linux/trunk/pbulk64}
export LOFS_RO_MOUNTS=${LOFS_RO_MOUNTS:-}
export LOFS_RO_MOUNTS_LINUX=${LOFS_RO_MOUNTS_LINUX:-/root/.gnupg}
export LOFS_RW_MOUNTS=${LOFS_RW_MOUNTS:-/data=/data}
export LOFS_RW_MOUNTS_LINUX=${LOFS_RW_MOUNTS_LINUX:-/data,/var/spool/postfix}
export NFS_MOUNTS=${NFS_MOUNTS:-}
export OPSYS=${OPSYS:-Linux}
export OVERLAY_MOUNTS=${OVERLAY_MOUNTS:-}
export PBULK_BASEDIR=${PBULK_BASEDIR:-/usr/pkg}
export PBULK_CLIENTS=${PBULK_CLIENTS:-127.0.0.1}
export PBULK_PATH=${PBULK_PATH:-/sbin:/bin:/usr/sbin:/usr/bin}
export PI_REQUIRED=${PI_REQUIRED:-}
export PKGBUILD=${PKGBUILD:-linux-trunk-pbulk64}
export PKGBUILD_BASEDIR=${PKGBUILD_BASEDIR:-/data/pkgbuild}
export PKGDBDIR=${PKGDBDIR:-/usr/pbulk/.pkgdb}
export PKGMANDIR=${PKGMANDIR:-man}
export PKGSRC_BASEDIR=${PKGSRC_BASEDIR:-/data}
export PKGSRC_DIR=${PKGSRC_DIR:-pkgsrc}
export PREFER_NATIVE=${PREFER_NATIVE:-yes}
export PREFIX=${PREFIX:-/usr/pbulk}
export REMOTE_PACKAGE_BASEDIR=${REMOTE_PACKAGE_BASEDIR:-pkgsrc.joyent.com/packages}
export REMOTE_PACKAGE_DIR=${REMOTE_PACKAGE_DIR:-Linux/trunk/pbulk64}
export REMOTE_PACKAGE_URL=${REMOTE_PACKAGE_URL:-http://pkgsrc.joyent.com/packages}
export REPORT_FROM_ADDR=${REPORT_FROM_ADDR:-root}
export REPORT_FROM_NAME=${REPORT_FROM_NAME:-Bulk Build User}
export REPORT_RECIPIENTS=${REPORT_RECIPIENTS:-root}
export ROOT_HOMEDIR=${ROOT_HOMEDIR:-/root}
export SHADOW_BASEDIR=${SHADOW_BASEDIR:-}
export SU=${SU:-/bin/su}
export SYNC_DATA=${SYNC_DATA:-false}
export SYSCONFDIR=${SYSCONFDIR:-/usr/pbulk/etc}
export TAR=${TAR:-/bin/tar}
export TMPFS_MOUNTS=${TMPFS_MOUNTS:-}
export TOOLS_BASEDIR=${TOOLS_BASEDIR:-/usr/pkg}
export TOOLS_BOOTSTRAP=${TOOLS_BOOTSTRAP:-}
export TOOLS_BUILD_PACKAGES=${TOOLS_BUILD_PACKAGES:-devel/git-base lang/nodejs pkgtools/mksandbox pkgtools/pbulk pkgtools/pkgdiff pkgtools/pkglint4 security/mozilla-rootcerts textproc/grep}
export TOOLS_COMPILER=${TOOLS_COMPILER:-}
export TOOLS_PACKAGE_DIR=${TOOLS_PACKAGE_DIR:-}
export USE_LOCAL_PKG_PATH=${USE_LOCAL_PKG_PATH:-no}
export VARBASE=${VARBASE:-/usr/pbulk/var}
export VERIFIED_INSTALLATION_PBULK=${VERIFIED_INSTALLATION_PBULK:-}
export XZ=${XZ:-/usr/bin/xz}

# Sanity check
my_opsys="$(uname -s)"
if [ "${my_opsys}" != "${OPSYS}" ]; then
	echo "ERROR: ${PKGBUILD} isn't a suitable pkgbuild for ${my_opsys}" >&2
	exit 1
fi
