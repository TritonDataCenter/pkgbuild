#
# Additional settings for the '2016Q4-tools' bulk build.
#

BRANCH=			2016Q4
PKGBUILD?=		2016Q4-tools
PKGBUILD_BASEDIR?=	/data/pkgbuild
TOOLS_BASEDIR?=		/opt/local

#
# Primarily file locations.
#
DISTDIR=		/data/distfiles
PACKAGES=		/data/packages/SmartOS/2016Q4/tools
WRKOBJDIR=		/home/pbulk/build
#

#
# General pkgsrc variables mostly set on a per-pkgbuild basis.
#
ALLOW_VULNERABLE_PACKAGES=	yes
CFLAGS+=			-pipe -O2
DBG=				# do not add CFLAGS via bootstrap-mk-files
FETCH_USING=			curl
INSTALL_UNSTRIPPED=		yes
MACHINE_ENDIAN=			little
MANZ=				yes
NO_PKGTOOLS_REQD_CHECK=		yes
PBULK_CACHE_DIRECTORY=		/var/tmp
PKGGNUDIR=
PKGINSTALL_IGNORE_UIDGID=	yes
PKGSRC_KEEP_BIN_PKGS=		no
PKGSRC_RUN_TEST=		no
PKGSRC_USE_CTF=			no
PKGSRC_USE_SSP=			strong
PKG_DEVELOPER=			yes
PKG_REGISTER_SHELLS=		yes
SHCOMMENT=			:
SKIP_LICENSE_CHECK=		yes
STRIP_DEBUG=			no
USE_CWRAPPERS=			yes
USE_GCC_LOCALBASE_PREFIX=	no
USE_PKGSRC_GCC_RUNTIME=		yes

#
# Enable additional PKG_DEVELOPER checks.  CHECK_WRKREF_EXTRA_DIRS is only
# activated if CHECK_WRKREF contains "extra".
#
CHECK_SHLIBS_BLACKLIST=		^/usr/sfw
CHECK_SHLIBS_BLACKLIST+=	^/(lib|usr/lib)(/(32|64|amd64))?/lib(curses|termcap|xml2|z).so
CHECK_SHLIBS_BLACKLIST+=	^/usr/lib(/(32|64|amd64))?/lib(gcc_s|stdc..).so
CHECK_WRKREF=			tools home
CHECK_WRKREF_EXTRA_DIRS=
#
# Support regenerating distinfo files.  This logic was integrated into pkgsrc
# on 2017-08-01, remove it and move FAILOVER_FETCH to general section above at
# some point.
#
.if !make(distinfo) && !make(mdi) && !make(makedistinfo)
FAILOVER_FETCH=			yes
.endif

#
# List of per-PKGPATH MAKE_JOBS definitions.  These are the packages that
# benefit most from having a larger -jN than the default as they are heavily
# depended upon, or are long builds near the end of the run.
#
PKG_MAKE_JOBS.devel/binutils=			2
PKG_MAKE_JOBS.lang/gcc7=			2

#
# Use a PKGPATH-based definition or the default
#
MAKE_JOBS_DEFAULT=	1
MAKE_JOBS=		${PKG_MAKE_JOBS.${PKGPATH}:U${MAKE_JOBS_DEFAULT}}

#
# Non-pkgsrc variables which are set on a per-pkgbuild basis that affect logic
# in any upcoming includes.
#
PKGBUILD_GCCBASE?=	/opt/local/gcc49
PKGBUILD_GCC_REQD?=	4.9

#
# Any additional per-config custom configuration.
#
.include "${PKGBUILD_BASEDIR}/include/exttools.mk"
.include "${PKGBUILD_BASEDIR}/include/gcc-libs.mk"
.include "${PKGBUILD_BASEDIR}/include/gz.mk"
.include "${PKGBUILD_BASEDIR}/include/hacks.mk"
.include "${PKGBUILD_BASEDIR}/include/libumem.mk"
.include "${PKGBUILD_BASEDIR}/include/meta-files.mk"
.include "${PKGBUILD_BASEDIR}/include/pkgfail.mk"
.include "${PKGBUILD_BASEDIR}/include/pkgoptions.mk"
.include "${PKGBUILD_BASEDIR}/include/pkgsrc-gcc.mk"
.include "${PKGBUILD_BASEDIR}/include/project.mk"
.include "${PKGBUILD_BASEDIR}/include/smf.mk"

#
# Optional user overrides
#
.sinclude "${PKGBUILD_BASEDIR}/conf/${PKGBUILD}/mk.conf.local"
